/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row mod tap/hold";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <170>;
            bindings = <&kp>, <&kp>;
        };

        hl: require_prior_idle2 {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row layer mod tap/hold";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <170>;
            bindings = <&mo>, <&kp>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        thumb_lt: thumb_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
        };

        thumb_ht: thumb_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bra {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
            layers = <0>;
        };

        right_bra {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
            layers = <0>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            layers = <0>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            layers = <0>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <22 23>;
            require-prior-idle-ms = <100>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
            require-prior-idle-ms = <170>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <14 15>;
            require-prior-idle-ms = <170>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <24 25>;
            require-prior-idle-ms = <170>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 19>;
        };
    };

    macros {
        m_a_grave: m_a_grave {
            compatible = "zmk,behavior-macro";
            label = "M_A_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp A>;
        };

        m_a_caret: m_a_caret {
            compatible = "zmk,behavior-macro";
            label = "M_A_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp A>;
        };

        m_e_cute: m_e_cute {
            compatible = "zmk,behavior-macro";
            label = "M_E_CUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
        };

        m_e_grave: m_e_grave {
            compatible = "zmk,behavior-macro";
            label = "M_E_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp E>;
        };

        m_e_caret: m_e_caret {
            compatible = "zmk,behavior-macro";
            label = "M_E_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp E>;
        };

        m_ou: m_ou {
            compatible = "zmk,behavior-macro";
            label = "M_OU";
            #binding-cells = <0>;
            bindings = <&kp O &kp LA(GRAVE) &kp U>;
        };

        m_u_caret: m_u_caret {
            compatible = "zmk,behavior-macro";
            label = "M_U_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp U>;
        };

        m_o_caret: m_o_caret {
            compatible = "zmk,behavior-macro";
            label = "M_O_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp O>;
        };

        m_paren_quote: m_paren_quote {
            compatible = "zmk,behavior-macro";
            label = "M_PAREN_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp DOUBLE_QUOTES>;
        };

        m_lt_gt_left: m_lt_gt_left {
            compatible = "zmk,behavior-macro";
            label = "M_LT_GT_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp Q  &kp W        &kp E           &kp R            &kp T                    &kp Y      &kp U             &kp I            &kp O        &hl 3 P
&kp A  &hm LCTRL S  &hm LEFT_ALT D  &hm LGUI F       &kp G                    &kp H      &hm RGUI J        &hm RIGHT_ALT K  &hm RCTRL L  &kp SEMICOLON
&kp Z  &kp X        &kp C           &kp V            &kp B                    &kp N      &kp M             &kp COMMA        &kp DOT      &kp SQT
                    &bootloader     &thumb_lt 1 TAB  &thumb_ht LSHFT ENTER    &kp SPACE  &thumb_lt 2 BSPC  &bootloader
            >;

            sensor-bindings =
                <&inc_dec_kp DOWN UP_ARROW>,
                <&inc_dec_kp RIGHT LEFT>;
        };

        numbers {
            label = "num";
            bindings = <
&kp ESC       &kp PG_UP  &kp PAGE_DOWN  &kp LS(GT)      &kp GRAVE        &kp LS(TILDE)  &kp N1             &kp N2     &kp N3  &kp LG(LS(N4))
&kp LEFT      &kp UP     &kp DOWN       &hm LGUI RIGHT  &kp LS(UNDER)    &kp EQUAL      &hm RGUI NUMBER_4  &kp N5     &kp N6  &kp LS(QMARK)
&kp CAPSLOCK  &kp HOME   &kp END        &kp LS(LT)      &kp MINUS        &kp LS(PLUS)   &kp N7             &kp N8     &kp N9  &kp N0
                         &kp LG(X)      &trans          &kp LSHFT        &kp SPACE      &kp DEL            &kp LG(S)
            >;

            sensor-bindings =
                <&inc_dec_kp RG(V) LG(C)>,
                <&inc_dec_kp LG(LS(Z)) LG(Z)>;
        };

        Fn {
            label = "vol";
            bindings = <
&kp LG(LC(Q))  &mkp MB1   &trans      &mkp MB2  &trans       &kp C_BRIGHTNESS_INC  &kp F1  &kp F2    &kp F3   &kp F4
&trans         &kp LCTRL  &kp LALT    &kp LGUI  &trans       &kp C_BRIGHTNESS_DEC  &kp F5  &kp F6    &kp F7   &kp F8
&trans         &kp TAB    &kp GRAVE   &trans    &mkp MB4     &mkp MB5              &kp F9  &kp F10   &kp F11  &kp F12
                          &kp K_MUTE  &trans    &kp LSHFT    &trans                &trans  &kp C_PP
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        bluetooth {
            label = "ble";
            bindings = <
&trans  &trans  &bt BT_SEL 4  &bt BT_SEL 3  &out OUT_TOG    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans
&trans  &trans  &trans        &trans        &trans          &trans      &trans        &trans        &trans        &trans
&trans  &trans  &trans        &trans        &trans          &trans      &trans        &trans        &trans        &trans
                &trans        &trans        &trans          &trans      &trans        &trans
            >;
        };

        numpad {
            bindings = <
&none  &none  &none  &kp K      &none     &kp DOT       &kp N7  &kp N8  &kp N9  &kp STAR
&none  &none  &none  &kp J      &none     &kp MINUS     &kp N4  &kp N5  &kp N6  &kp PLUS
&none  &none  &none  &none      &none     &kp NUMBER_0  &kp N1  &kp N2  &kp N3  &kp FSLH
              &none  &kp LS(G)  &trans    &trans        &trans  &none
            >;

            label = "NUM";
            sensor-bindings = <&inc_dec_kp F24 F24>, <&inc_dec_kp F15 F14>;
        };
    };
};
